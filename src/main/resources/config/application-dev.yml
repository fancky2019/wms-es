#注意每个属性：（冒号）后要有一个空格

server:
  port: 8088
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      location: D:/upload  # Windows temp directory
  shutdown: GRACEFUL # GRACEFUL/IMMEDIATE (默认:IMMEDIATE)
#开发配
spring:
  #  mvc:
  #    pathmatch:
  #      matching-strategy: ant_path_matcher
  #  main:
  #    allow-bean-definition-overriding: true #当遇到相同名字的时候，是否允许覆盖注册 bean
  main:
    allow-circular-references: true
  application:
    name: springBootProject

  datasource:
    #    # sqlserver
    #    url: jdbc:sqlserver://gen-song.vip,13999;DatabaseName=GensongWms3DB;integratedSecurity=true;encrypt=true;trustServerCertificate=true
    url: jdbc:sqlserver://10.100.200.43;DatabaseName=wms_liku;trustServerCertificate=true
    #url: jdbc:sqlserver://localhost:1433;DatabaseName=RABC
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: sa
    password: gen@song123

    #    url: jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf8&useSSL=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&allowMultiQueries=true&rewriteBatchedStatements=true
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    #    username: root
    #    password: 123456
    #    #mysql
    #    #具体参见类DynamicDataSourceAspect 说明
    #    #不用此默认，默认就是写库,多数据源用jdbcUrl，不是url,spring 默认用的是url，用多数据源用url会报错。
    #    url: jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf8&useSSL=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&allowMultiQueries=true&rewriteBatchedStatements=true
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    #    username: root
    #    password: 123456


    #要引入mybatis
    type: com.zaxxer.hikari.HikariDataSource
    # Hikari will use the above plus the following to setup connection pooling
    hikari:
      minimum-idle: 5
      maximum-pool-size: 100
      auto-commit: true #OrderManagerService 代码异常，spring自动回滚，或者手动回滚。否则正常自动提交
      idle-timeout: 5000
      #pool-name: HikariCP-Demo
      max-lifetime: 1800000
      connection-timeout: 5000
      #connection-test-query: SELECT 1

  redis:
    ##单机
    #  数据库索引
    database: 0

    #    单机
    # 远程服务器地址 127.0.0.1 10.100.200.43
    host: 10.100.200.43
    # 远程服务器端口
    port: 6379

    # 集群配置也用此处写正确的密码
    password: fancky123456
    # 链接超时时间（毫秒）
    timeout: 300000

    #redis连接池 lettuce、jedis。连接池 单机配置。默认集成lettuce
    #    jedis:
    lettuce:
      pool:
        # 最大空闲连接
        max-idle: 64
        # 最小空闲链接
        min-idle: 0
        # 最大连接数（负数表示没有限制）
        max-active: 64
        # 最大阻塞等待时间（负数表示没有限制）
        max-wait: 0


    #    ##集群 注意：密码用上面密码配置
    #    cluster:
    #      nodes:
    #        - 127.0.0.1:7000
    #        - 127.0.0.1:7001
    #        - 127.0.0.1:7002
    #        - 127.0.0.1:7003
    #        - 127.0.0.1:7004
    #      max-redirects: 3

    #    ##哨兵 密码用上面密码配置
    #    sentinel:
    #      master: mymaster
    #      nodes:
    #        - 127.0.0.1:60001
    #        - 127.0.0.1:60002
    #        - 127.0.0.1:60003


    #springboot 配置未成功，参见代码的配置
    redisson:
      file: classpath:redisson-config.yml



  rabbitmq:
    ##集群配置 ip:port,ip:port 。多个配置之间用逗号隔开
    # addresses: 127.0.0.1:5673,127.0.0.1:5674,127.0.0.1:5675 #指定client连接到的server的地址，多个以逗号分隔(优先取addresses，然后再取host)

    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    #发布确认 publisher-confirms已经修改为publisher-confirm-type，
    #publisher-confirms: true
    publisher-confirm-type: CORRELATED
    # 开启发送失败退回
    publisher-returns: true
    template:
      #设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
      mandatory: true
    virtual-host: /
    #开启手动Axk,手动无法自动加入死信队列，可以重试指定次数。
    #设置成默认的自动Ack,springboot会加入死信队列，一定设置死信队列。
    #    listener.simple.acknowledge-mode: manual
    listener:
      #全局SimpleRabbitListenerContainerFactory 配置
      simple:
        retry:
          #是否开启消费者重试（为false时关闭消费者重试，这时消费端代码异常会一直重复收到消息）
          #默认false ,不采用spring自带的重试，自己设计死信队列达到重试次数入库
          enabled: false
          #最大重试次数（包括执行一次，实际重试两次。1+2=3），达到重试次数不再消费，
          #不能在代码中吞噬异常否则无法重试，类似数据库事务
          max-attempts: 3
          #重试间隔时间（单位毫秒）
          initial-interval: 2000
        #公平分发模式 默认是1
        prefetch: 30
        #默认 auto，不然消费异常业务ack掉。尽管配置重新入队auto还是会重试入队之后ack掉
        acknowledge-mode: manual
        #消费异常的数据重新入队。
    #        default-requeue-rejected: true

    #    listener:
    #      direct:
    #        acknowledge-mode: manual
    #        #默认是1
    #        prefetch: 1

  # MQTT配置信息
  mqtt:
    # MQTT服务地址，端口号默认11883，如果有多个，用逗号隔开
    url: tcp://10.100.200.43:1883
    # 用户名
    username: ""
    # 密码
    password: ""
    consumerid: id_dev_consumerid
    # 客户端id(不能重复)
    client:
      id: id_dev
    # MQTT默认的消息推送主题，实际可在调用接口是指定
    default:
      topic: topic

feign:
  # 明确关闭 Hystrix

  #  #携带token,未验证
  #  oauth2:
  #    # 开启Oauth支持，这样就会在请求头中携带Token了
  #    enabled: true
  #    # 同时开启负载均衡支持
  #    load-balanced: true
  #  默认超时值
  #  connectTimeout：10 秒（10,000 毫秒）
  #  readTimeout：60 秒（60,000 毫秒）
  # 设置 feign 超时时间:超时异常
  client:
    config:
      # default、service-provider-two，指定服务名称可以设置单个服务的超时时间
      default:
        connectTimeout: 600000  #单位ms
        readTimeout: 600000
  httpclient:
    connection-timeout: 600000  #单位ms,默认2000
    max-connections: 200 #线程池最大连接数
    enabled: false
  okhttp: #用okhttp 代替默认的Client，JDK 原生的 URLConnection 发送HTTP请求，没有连接池
    enabled: true


sbp:
#  true  false
#  ordermigratedbtoolurl: http://localhost:8101
#  ESCertPath: D:\work\dev\ES\elk\elasticsearch-8.8.2\config\certs\http_ca.crt
  wmsurl: http://127.0.0.1:9000/api/app
  allowedoriginpatterns:
    - "http://10.100.200.43:8088"
    - "http://10.100.200.43:8188"
    - "http://10.100.200.32:8889"
    - "http://10.100.200.32:8882"
    - "http://10.100.200.32:8088"
    - "http://localhost:[*]"
    - "http://127.0.0.1:[*]"
  authority: http://gen-song.vip:14001/api/app      #;//http://10.100.200.43:9001/api/app
  hostAndPort: 10.100.200.43:9200
  checkpermission: false
  initCache: false
  logMq: false
  flink:
    enable: false
    databaseList:
      - liku
    tableList:
      - dbo.InventoryItemDetail
      - dbo.InventoryItem
      - dbo.Inventory
      - dbo.Location
      - dbo.Laneway
    hostname: 10.100.200.43
    port: 1433
    username: sa
    password: gen@song123
    checkpointStoragePath: D:/flinkcdc/checkpoints
    tmpdir: D:\\flinkcdc\\temp

xxl:
  job:
    accessToken: default_token
    admin:
      #      addresses: http://xxljob.com:8182/xxl-job-admin
      addresses: http://127.0.0.1:8182/xxl-job-admin
    executor:
      address:
      appname: springBootProject
      ip:
      logpath: /data/applogs/xxl-job/jobhandler
      logretentiondays: 30
      port: 9999

##mybatis log 日志显示配置
#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus:
  ##  mybatis全局配置文件
  #  config-location: classpath:mybatis-config.xml
  #  Mapper文件存放的位置，多了层文件夹，默认不用配置
  mapper-locations: classpath:mapper/*.xml
  #  实体类所在的包
  type-aliases-package: gs.com.gses.demos.model.entity
  #  M_Str1  默认命中mStr1
  configuration:
    map-underscore-to-camel-case: false  #默认true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
logging:
  config: classpath:log4j2.xml
  #mybatis-plus 日志级别配置，不用配置
#  level:
#    com.baomidou.mybatisplus: DEBUG
